SQL Note
1 数据模型
	a. 概念模型：以客户的观点和想法为基础，对现实世界事物的抽象，E-R图（实体-关系图）描述。
	b. 逻辑数据模型：用户看到的数据库中的数据模型，常用关系数据模型
	c. 物理数据模型：用来表示数据的存储结构。
2 E-R图：实体（正方形，二维表），属性（椭圆，二维表的列），关系（菱形）
3 关系数据库中的关系模式
	a. 概念模式（模式）：用来描述数据库中的逻辑结构，即现实世界中的实体在数据库系统中的具体表现，一个关系逻辑结构对应一张二维表。
	b. 外模式（用户模式）：在外模式中定义了允许用户操作的数据，如视图等。
	c. 内模式（存储模式）：用来描述数据的物理结构和数据的存储方式的，如索引的组织方式，数据记录的存储方式等。
4 SQL语句分类
	4.1 数据定义（Data Definition Language,DDL)
		4.1.1 创建（CREATE）
		4.1.2 修改（ALTER)
		4.1.3 删除（DROP）
	4.2 数据查询（Data Query Language,DQL)
		4.2.1 查询（SELECT）
			5个子句：FROM子句、WHERE子句、GROUP BY子句、HAVING子句、WITH子句
	4.3 数据操作（Data Manipulation Language,DML)
		4.3.1 插入（INSERT）
		4.3.2 更新（UPDATE）
		4.3.3 删除（DELETE）
	4.4 数据控制（Data Control Language,DCL）
		4.4.1 授权（GRANT）
		4.4.2 回收（REVOKE）
	4.5 事务控制
		4.5.1 提交（COMMIT）
		4.5.2 回滚（ROLLBACK）
5 常用的数据类型
	5.1 整数
		TINYINT：1个字节 -2^7~2^7-1 SMALLINT：2个字节 -2^15~2^15-1 MEDDIUMINT：3个字节 -2^23~2^23-1 INT：4个字节 -2^31~2^31-1 BIGINT：8个字节 -2^63~2^23-1
		INT(4): 括号内的数字为最大显示宽度，不影响取值范围
	5.2 浮点
		FLOAT(m,n)：4个字节 精确到小数点后7位 DOUBLE(m,n)：8个字节 精确到小数点后15位 其中m为保存数字的总位数，n为小数点后的数字个数
	5.3 日期与时间
		DATE： 默认数据格式：YYYY-MM-DD TIME： 默认格式为：HH:MM:SS DATETIME：默认格式为：YYYY-DD-MM HH:MM:SS
	5.4 字符
		CHAR(n)：定长字符数据，n为最大字符长度，0~255 VARCHAR(n)：1~65535 TINYTEXT：1~65535 TEXT：1~2^16-1 MEDUYNTEXT：1~2^24-1 LONGTEXT：1~2^32-1
	5.5 二进制
		BLOB TINYBLOB MEDIUMBLOB LONGBLOB
6 大小写敏感
	a. 不区分关键字大小写
	b. 对数据库中的数据是大小写敏感的
7 表
	7.1 主键
		主键在关系模型中用来约束实体完整性（行的完整性，为了保证数据表中不会出现两个完全相同的数据记录，主键不能为空且不能重复）
	7.2 外键
		a. 如果属性列F是关系B中一个属性（并不是关系B的主键），并且属性列F是关系A中的主键，则F是关系B的外键。关系A为主表，关系B为主表的从表
		b. 外键在用来约束参照完整性。（从表的每一条数据记录中的外键值都必须存在于主表中）
	7.3 索引
		a. 索引是一个指向数据表中数据的指针，指向索引字段在数据表中的物理字段。
	7.4 约束
		a. 表的约束：唯一约束（UNIQUE 可以为空,Mysql为列的唯一约束建立一个唯一索引，索引名和约束名相同），主键约束（唯一且不为空,PRIMARY KEY，Mysql为建立列级主键同时建立一个主索引，索引名和约束名相同），外键约束(FOREIGN KEY，删除和修改的方式：CASCADE，SET Null，RESTRICT-系统报错，从表中相应数据不会删除)，检查约束（CHECK,保证数据规则的一致性），非空约束(10NOT NULL)
		
8 索引分类：
	8.1 唯一索引
		使用UNIQUE关键字可为一个数据列定义唯一索引
	8.2 主索引
		使用PRIMARY KEY关键字可以为一个数据列定义主索引 
	8.3 单列索引
		使用KEY或INDEX关键字为某列定义单列索引
	8.4 复合索引
		为一个数据表的多个数据列创建索引，如CREATE INDEX i_indexname ON tablename(colum1,colum2 ASC)
	8.5 聚簇索引
		聚簇索引的索引项的顺序与数据表中的数据记录的物理顺序保持一致
9 修改数据库中的表(ALTER TABLE)
	9.1 增加一列
		ALTER TABLE table_name ADD(column_name datatype[constrait_condition])
	9.2 增加一个约束条件
		ALTER TABLE table_name ADD constraint_type(column_name): ALTER TABLE table_name ADD PRIMARY KEY(column_name),ALTER TABLE table_name ADD FOREIGN KEY(key_name) REFFERENCES refer_table(refer_column)
	9.3 增加一个索引
		ALTER TABLE table_name ADD INDEX i_indexname(column1[,column2])
	9.4 修改表中的某一列
		ALTER TABLE table_name MODIFY column_name datatype: ALTER TABLE table_name MODIFY sex CHAR(2)
	9.5 删除表中的一列
		ALTER TABLE table_name DROP column_name
	9.6 删除一个约束条件
		ALTER TABLE table_name DROP constraint_type(一种类型的约束条件只能有一个？)
	9.7 删除表
		DROP TABLE table_name[CASCADE CONSTRAINTS],CASCADE CONSTRAINTS:级联删除从表中的外键约束
10 数据查询
	10.1 对查询的记录进行算术运算
		SELECT salary*12 AS 年收入 FROM T_teacher
	10.2 连接字段（只能连接类型相同的字段）
		SELECT stuID,CONCAT(stuName,sex) FROM T_student
	10.3 比较查询
		10.3.1 算术比较运算符
			<>(不等于），!<(不小于），!>(不大于），!=(不等于），WHERE子句中比较的是数值类型，则可以不使用单引号，如果比较的是其他类型，如日期，字符串，则必须使用单引号。
		10.3.2 BETWEEN...AND
		10.3.3 IN运算符
			字段1 IN(属性值1，属性值2，属性值3...)，如果属性值为字符类型，则需要加单引号
		10.3.4 字符串比较
			a. 使用比较运算符进行比较(应该使用大小写转换函数UPPER LOWER转换后进行比较），其实并不区分大小写
			b. 使用BINARY关键字对字符串进行二进制比较(比较时可以区分大小写): string1 比较运算符 BINARY string2
		10.3.5 日期时间比较
			比较日期和时间值需要使用单引号(DATE_FORMAT可以将日期转换为需要的形式)
	10.4 逻辑查询
		 NOT>AND>OR(优先级关系)
	10.5 空值查询	
		属性表的行属性没有任何数据记录：IS NULL or IS NOT NULL,用比较运算符对NULL值进行比较，始终为FALSE，不会返回任何结果
	10.6 模糊查询
		10.6.1 匹配任意单个字符：通配符"_"
		10.6.2 匹配0个或多个字符：通配符“%”
		10.6.3 使用转义字符：在ESCAPE后指定转义字符：LIKE ‘%$_%’ ESCAPE '$'
		10.6.4 使用REGEXP关键字进行模式匹配
			a. ^: 用来匹配字符串的开始
			b. $: 用来匹配字符串的结尾
			c. []: 匹配方括号内任意某个字符或字符串
			d. -: 匹配字符的范围
			e. +: 至少出现一次或多次
			f. *: 至少出现零次或多次
			g. (): 圆括号中的内容将被看做一个整体
			h. {m}: 数字m表示花括号钱的字符串需要出现m次
			SELECT * FROM T_student WHERE stuName REGEXP '^王'
	10.7 排序和分组
		10.7.1 指定某列进行排序
			a. 默认升序ASC，降序为DESC，不能用在子查询的SELECT语句中
			b. 如果SELECT语句中有多个子句（如WHERE子句，GROUP子句，HAVING子句），ORDER BY子句作为最会一条子句出现
		10.7.2 指定表中列的位置序号进行排序
			a. SELECT * FROM T_teacher ORDER BY 5 DESC
			b. 使用UNION，MINUS等集合操作时，比较好用
		10.7.3 指定多列进行排序
			a. 根据ORDER子句的列顺序依次进行排序，如果前列有重复，重复的列按后列排序
			b. SELECT * FROM T_teacher ORDER BY dept ASC,salary DESC
		10.7.4 常用聚合函数
			a. COUNT，SUM，AVG: 可以使用DISTINCT去除指定列中的重复项，SUM和AVG表达式中只能是数字类型，除了COUNT(*)之外，其他的几个函数在计算时都忽略NULL行，COUNT(列表达式):统计非空行数
			b. MAX,MIN: 列可以为数字，字符，日期类型
			c. 聚合函数一般和GROUP BY子句在一起使用，且只能出现在SELECT语句，GROUP子句和HAVING子句中
		10.7.5 多列分组
			a. 如果SELECT语句中同时含有数据列和聚合函数，那么必须使用GROUP BY子句进行分组操作，且GROUP BY子句必须出现所有选择列
			b. HAVING字句用来限制分组后的查询结果：GROUP BY 列名1[,列名2...] HAVING 条件表达式，可以使用SELECT语句中没有出现的列
			c. 对分组结果进行排序，通常ORDER BY子句中会用到聚合函数	，GROUP BY将所有分组列为NULL的归为一组且NULL值最小
		10.7.6 使用ROLLUP关键字统计数据
			a. ROLLUP: 对分组后的数据做阶段性的操作（相当于小计），并且可以对查询出来的所有记录的数据做一个最终操作（相当于总计）,放在GROUP BY子句后面：GROUP BY columnName WITH ROLLUP
		10.7.7 限制结果集行数
			a. LIMIT offset,n: 查询MYSQL中从数据表中第offset+1条开始的记录，并返回n条
	10.8 连接查询与集合查询
		10.8.1 内连接查询
			a. 等值连接：用“=”号连接或者INNER JOIN，前者使用WHERE子句AND其他条件时，表示两表相关联的列应该放在前面，以提高效率，如 SELECT a.id,b.id,a.name FROM A a,B b WHERE a.id=b.id AND a.name='test'
			b. 非等值连接： 使用除“=”号外的其他运算符或者BETWEEN...AND（单独使用一般没有意义）
			c. 使用USING子句建立等值连接：SELECT A.column,B.column FROM A JOIN B USING(column)
		10.8.2 交叉连接
			a. 结果为笛卡尔积，在进行连接查询时未指定WHERE条件即为交叉连接（使用CROSS　JOIN也是交叉连接），通常无用
		10.8.3 自连接查询
			a. SELECT C2.curName,C2.credit FROM T_curriculum C1,T_curriculum C2 WHERE C1.curName='操作系统' AND C2.credit>C1.credit 查询T_curriculum表中学分大于操作系统学分的课程
		10.8.4 外连接
			a. 左外连接：包括左侧表中不满足查询条件的记录（列出左侧表中的所有记录）SELECT * FROM t1 LEFT JOIN t2 ON t1.id=t2.id OR SELECT * FROM t1 LEFT JOIN t2 USING(
			b. 右外连接
			c. 全外连接
		10.8.5 集合查询
			a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行
	10.9 子查询	10.8.5 集合查询
		a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行
10.9 子查询	10.8.5 集合查询
	a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行10.9 子查询	10.8.5 集合查询
		a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行
10.9 子查询	10.8.5 集合查询
	a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行10.9 子查询	10.8.5 集合查询
		a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行
10.9 子查询	10.8.5 集合查询
	a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行10.9 子查询	10.8.5 集合查询
		a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行
10.9 子查询	10.8.5 集合查询
	a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行10.9 子查询	10.8.5 集合查询
		a. 并操作：SELECT 语句1 UNION SELCT 语句2,需要保证语句1和语句2查询出的列数必须相同而且对应列的数据类型必须相同，合并两个查询不重复的所有行
10.9 子查询
